version: '3.7'
services:
  nginx:
    image: nginx:1.25
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:15
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - database-data:/var/lib/postgresql/data:cached

  backend:
    build: backend
    command: bash -c "alembic upgrade head && python app/main.py"
    env_file: ./.env
    tty: true
    volumes:
      - ./backend:/app/:cached
    environment:
      PYTHONPATH: .
    depends_on:
      - db

  frontend:
    build: frontend
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      NODE_ENV: ${FRONTEND_NODE_ENV}

  # Uncomment if what to use pgadmin to check the DB
  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
  #   ports:
  #     - ${PGADMIN_PORT}:80
  #   depends_on:
  #     - db

volumes:
  database-data: